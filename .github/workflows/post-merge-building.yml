name: Unity Post-Merge Build

on:
  push:
    branches:
      - master  # Runs after merging into 'master'

jobs:
  build:
    strategy:
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - StandaloneLinux64
          - iOS
          - Android
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      
      # âœ… Ensure Unity is installed with required modules
      - name: Set up Unity
        uses: game-ci/setup-unity@v4
        with:
          unityVersion: 6000.0.36f1
          modules: StandaloneWindows64, StandaloneLinux64, iOS, Android

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.4.0  # Free up space for Android builds
      
      - name: Build for ${{ matrix.targetPlatform }}
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  release:
    needs: build  # Runs only after all builds are finished
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Delete Old GitHub Release
        uses: liudonghua123/delete-release-action@v1
        with:
          release_name: 'latest'
        continue-on-error: true  # Ignores errors if release doesn't exist

      - name: Delete Old Git Tag (If Exists)
        run: |
          git tag -d latest || true
          git push origin --delete latest || true
        continue-on-error: true  # Ignores errors if tag doesn't exist

      - name: Create or Update "Latest" Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest  # Always use 'latest'
          release_name: "Latest Unity Build"
          body: "ðŸš€ This release is automatically updated with the latest successful Unity build."
          draft: false
          prerelease: false
          files: build/**
          token: ${{ secrets.GITHUB_TOKEN }}
